"use client"
import Marquee from "react-fast-marquee";
import { navData } from '@/data/navData'
import Image from 'next/image'
import React, { useEffect, useState } from 'react'
import { Menu, X, } from 'lucide-react';

const items = [
    "üå± ‡ßß‡ß¶‡ß¶% ‡¶ñ‡¶æ‡¶Å‡¶ü‡¶ø ‡¶ì ‡¶Ö‡¶∞‡ßç‡¶ó‡¶æ‡¶®‡¶ø‡¶ï ‡¶™‡¶£‡ßç‡¶Ø‡ßá‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶Ø‡¶º‡¶§‡¶æ",
    "ü•¶ ‡¶™‡ßç‡¶∞‡¶ï‡ßÉ‡¶§‡¶ø‡¶∞ ‡¶∏‡ßç‡¶™‡¶∞‡ßç‡¶∂‡ßá ‡¶¨‡¶ø‡¶∂‡ßÅ‡¶¶‡ßç‡¶ß ‡¶Ö‡¶∞‡ßç‡¶ó‡¶æ‡¶®‡¶ø‡¶ï ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞",
    "üçØ ‡¶∞‡¶æ‡¶∏‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡¶ï‡¶Æ‡ßÅ‡¶ï‡ßç‡¶§, ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡¶ï‡¶∞ ‡¶ì ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶ ‡¶™‡¶£‡ßç‡¶Ø",
    "üåæ ‡¶ñ‡¶æ‡¶Å‡¶ü‡¶ø ‡¶ì ‡¶Ö‡¶∞‡ßç‡¶ó‡¶æ‡¶®‡¶ø‡¶ï ‡¶™‡¶£‡ßç‡¶Ø‡ßá ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∂‡ßç‡¶∞‡ßÅ‡¶§‡¶ø",
    "üõí ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶ò‡¶∞‡ßá ‡¶¨‡¶∏‡ßá, ‡¶™‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶ï‡ßÉ‡¶§‡¶ø‡¶∞ ‡¶Ü‡¶∏‡¶≤ ‡¶∏‡ßç‡¶¨‡¶æ‡¶¶",
    "üíö ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶Ö‡¶∞‡ßç‡¶ó‡¶æ‡¶®‡¶ø‡¶ï ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®",
    "üéâ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶õ‡¶æ‡ßú ‡¶ö‡¶≤‡¶õ‡ßá ‚Äì ‡¶è‡¶ñ‡¶®‡¶á ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®!",
    "üöö ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßá ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø",
];
const NavBar = () => {
    const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);
    const [showNavbar, setShowNavbar] = useState(true);
    const [lastScrollY, setLastScrollY] = useState(0);

    useEffect(() => {
        const controlNavbar = () => {
            if (window.scrollY > lastScrollY) {
                setShowNavbar(false);
            } else {
                setShowNavbar(true);
            }
            setLastScrollY(window.scrollY);
        };

        window.addEventListener("scroll", controlNavbar);

        return () => {
            window.removeEventListener("scroll", controlNavbar);
        };
    }, [lastScrollY]);

    return (
        <nav
            className={` ${lastScrollY !== 0 && "fixed top-0 left-0"}  z-50 w-full bg-white border-b border-b-slate-300 transition-transform duration-300 ${showNavbar ? "translate-y-0" : "-translate-y-full"
                }`}
            aria-label="Main navigation"
        >
            <div className="theme_background">
                <Marquee className="py-3">
                    {items.map((text, i) => (
                        <div
                            key={i}
                            className="mx-8 whitespace-nowrap text-sm md:text-base lg:text-lg font-semibold text-white"
                        >
                            {text}
                        </div>
                    ))}
                </Marquee>
            </div>


            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div className="flex justify-between items-center py-4">
                    <div className="flex items-center ">
                        <div

                            className="w-20 h-20 "
                        >
                            <Image src={"https://res.cloudinary.com/dqpyp8ii2/image/upload/v1758035793/Nature_Life_Logo-01-01_cl15ho.png"} alt='logo' width={500} height={500} />

                        </div>
                        <div className="">
                            <h1 className="text-2xl font-bold theme_text">
                                ‡¶®‡ßç‡¶Ø‡¶æ‡¶ö‡¶æ‡¶∞ ‡¶≤‡¶æ‡¶á‡¶´
                            </h1>
                        </div>
                    </div>

                    {/* Desktop Menu */}
                    <div className="hidden md:flex items-center space-x-10">
                        {
                            navData?.map((itm, idx) =>

                                <a key={idx} href={`${itm?.link}`} className="block text-gray-800 hover:text-green-600 font-medium">
                                    {itm?.title}
                                </a>
                            )
                        }

                        <button
                            className="bg-gradient-to-r from-green-500 to-emerald-600 text-white px-6 py-2 rounded-full font-semibold"
                        >
                            ‡¶è‡¶ñ‡¶®‡¶á ‡¶ï‡¶ø‡¶®‡ßÅ‡¶®
                        </button>
                    </div>

                    {/* Mobile Menu Button */}
                    <button
                        className="md:hidden focus:outline-none"
                        onClick={() => setIsMenuOpen(!isMenuOpen)}
                        aria-label={isMenuOpen ? 'Close menu' : 'Open menu'}
                    >
                        {isMenuOpen ? <X className="w-7 h-7 text-gray-800" /> : <Menu className="w-7 h-7 text-gray-800" />}
                    </button>
                </div>
            </div>

            {/* Mobile Menu */}
            {isMenuOpen && (
                <div

                    className="md:hidden bg-white/95 backdrop-blur-md border-t border-gray-200"
                >
                    <div className="px-4 py-6 space-y-4">
                        {
                            navData?.map((itm, idx) =>

                                <a key={idx} href={`${itm?.link}`} className="block text-gray-800 hover:text-green-600 font-medium">
                                    {itm?.title}
                                </a>
                            )
                        }


                        <button

                            className="w-full  bg-gradient-to-r from-[#43b51a] to-[#3a861f] text-white px-6 py-3 rounded-full font-semibold"
                        >
                            ‡¶è‡¶ñ‡¶®‡¶á ‡¶ï‡¶ø‡¶®‡ßÅ‡¶®
                        </button>
                    </div>
                </div>
            )}
        </nav>
    )
}

export default NavBar